/* Autogenerated file. Do not edit manually. */

/* eslint-disable max-classes-per-file */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* eslint-disable @typescript-eslint/consistent-type-imports */

/*
  Fuels version: 0.101.3
  Forc version: 0.69.1
  Fuel-Core version: 0.44.0
*/

import { Contract as __Contract, Interface } from "fuels";
import type {
  Provider,
  Account,
  StorageSlot,
  Address,
  BigNumberish,
  BN,
  FunctionFragment,
  InvokeFunction,
} from 'fuels';

export type ExampleStorkPriceEventInput = { timestamp: BigNumberish, quantized_value: I128Input };
export type ExampleStorkPriceEventOutput = { timestamp: BN, quantized_value: I128Output };
export type I128Input = { underlying: U128Input };
export type I128Output = { underlying: U128Output };
export type U128Input = { upper: BigNumberish, lower: BigNumberish };
export type U128Output = { upper: BN, lower: BN };

const abi = {
  "programType": "contract",
  "specVersion": "1.1",
  "encodingVersion": "1",
  "concreteTypes": [
    {
      "type": "()",
      "concreteTypeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
    },
    {
      "type": "b256",
      "concreteTypeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
    },
    {
      "type": "struct ExampleStorkPriceEvent",
      "concreteTypeId": "a9e7d7900e522f6aaf90188d9f7c34cc3bcc690693c863669e7439dff4b96c8b",
      "metadataTypeId": 0
    }
  ],
  "metadataTypes": [
    {
      "type": "struct ExampleStorkPriceEvent",
      "metadataTypeId": 0,
      "components": [
        {
          "name": "timestamp",
          "typeId": 3
        },
        {
          "name": "quantized_value",
          "typeId": 1
        }
      ]
    },
    {
      "type": "struct signed_int::i128::I128",
      "metadataTypeId": 1,
      "components": [
        {
          "name": "underlying",
          "typeId": 2
        }
      ]
    },
    {
      "type": "struct std::u128::U128",
      "metadataTypeId": 2,
      "components": [
        {
          "name": "upper",
          "typeId": 3
        },
        {
          "name": "lower",
          "typeId": 3
        }
      ]
    },
    {
      "type": "u64",
      "metadataTypeId": 3
    }
  ],
  "functions": [
    {
      "name": "use_stork_price",
      "inputs": [
        {
          "name": "feed_id",
          "concreteTypeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
        },
        {
          "name": "stork_contract_address",
          "concreteTypeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
        }
      ],
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": null
    }
  ],
  "loggedTypes": [
    {
      "logId": "12242991125745512298",
      "concreteTypeId": "a9e7d7900e522f6aaf90188d9f7c34cc3bcc690693c863669e7439dff4b96c8b"
    }
  ],
  "messagesTypes": [],
  "configurables": [],
  "errorCodes": {}
};

const storageSlots: StorageSlot[] = [];

export class ExampleInterface extends Interface {
  constructor() {
    super(abi);
  }

  declare functions: {
    use_stork_price: FunctionFragment;
  };
}

export class Example extends __Contract {
  static readonly abi = abi;
  static readonly storageSlots = storageSlots;

  declare interface: ExampleInterface;
  declare functions: {
    use_stork_price: InvokeFunction<[feed_id: string, stork_contract_address: string], void>;
  };

  constructor(
    id: string | Address,
    accountOrProvider: Account | Provider,
  ) {
    super(id, abi, accountOrProvider);
  }
}
