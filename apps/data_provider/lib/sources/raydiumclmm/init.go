// Code initially generated by gen.go.

package raydiumclmm

import (
	"github.com/Stork-Oracle/stork-external/apps/data_provider/lib/sources"
	"github.com/Stork-Oracle/stork-external/apps/data_provider/lib/types"
	"github.com/Stork-Oracle/stork-external/apps/data_provider/lib/utils"
	"github.com/mitchellh/mapstructure"
)

var RaydiumCLMMDataSourceId types.DataSourceId = types.DataSourceId(utils.GetCurrentDirName())

type raydiumCLMMDataSourceFactory struct{}

func (f *raydiumCLMMDataSourceFactory) Build(sourceConfig types.DataProviderSourceConfig) types.DataSource {
	return newRaydiumCLMMDataSource(sourceConfig)
}

func init() {
	sources.RegisterDataSourceFactory(RaydiumCLMMDataSourceId, &raydiumCLMMDataSourceFactory{})
}

var (
	_ types.DataSource        = (*raydiumCLMMDataSource)(nil)
	_ types.DataSourceFactory = (*raydiumCLMMDataSourceFactory)(nil)
)

func GetSourceSpecificConfig(sourceConfig types.DataProviderSourceConfig) (RaydiumCLMMConfig, error) {
	var config RaydiumCLMMConfig
	err := mapstructure.Decode(sourceConfig.Config, &config)

	return config, err
}
