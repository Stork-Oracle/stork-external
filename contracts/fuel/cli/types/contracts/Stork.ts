/* Autogenerated file. Do not edit manually. */

/* eslint-disable max-classes-per-file */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* eslint-disable @typescript-eslint/consistent-type-imports */

/*
  Fuels version: 0.101.3
  Forc version: 0.69.1
  Fuel-Core version: 0.44.0
*/

import { Contract as __Contract, Interface } from "fuels";
import type {
  Provider,
  Account,
  StorageSlot,
  Address,
  BigNumberish,
  BN,
  Bytes,
  EvmAddress,
  FunctionFragment,
  InvokeFunction,
  StdString,
  StrSlice,
} from 'fuels';

import type { Enum, Vec } from "./common";

export type IdentityInput = Enum<{ Address: AddressInput, ContractId: ContractIdInput }>;
export type IdentityOutput = Enum<{ Address: AddressOutput, ContractId: ContractIdOutput }>;
export type StateInput = Enum<{ Uninitialized: undefined, Initialized: IdentityInput, Revoked: undefined }>;
export type StateOutput = Enum<{ Uninitialized: void, Initialized: IdentityOutput, Revoked: void }>;
export type StorkErrorInput = Enum<{ IncorrectFeeAsset: AssetIdInput, InsufficientFee: BigNumberish, NoFreshUpdate: undefined, FeedNotFound: string, InvalidSignature: TemporalNumericValueInputInput }>;
export type StorkErrorOutput = Enum<{ IncorrectFeeAsset: AssetIdOutput, InsufficientFee: BN, NoFreshUpdate: void, FeedNotFound: string, InvalidSignature: TemporalNumericValueInputOutput }>;
export type StorkEventInput = Enum<{ ValueUpdate: [] }>;
export type StorkEventOutput = StorkEventInput;

export type AddressInput = { bits: string };
export type AddressOutput = AddressInput;
export type AssetIdInput = { bits: string };
export type AssetIdOutput = AssetIdInput;
export type ContractIdInput = { bits: string };
export type ContractIdOutput = ContractIdInput;
export type I128Input = { underlying: U128Input };
export type I128Output = { underlying: U128Output };
export type TemporalNumericValueInput = { timestamp_ns: BigNumberish, quantized_value: I128Input };
export type TemporalNumericValueOutput = { timestamp_ns: BN, quantized_value: I128Output };
export type TemporalNumericValueInputInput = { temporal_numeric_value: TemporalNumericValueInput, id: string, publisher_merkle_root: string, value_compute_alg_hash: string, r: string, s: string, v: BigNumberish };
export type TemporalNumericValueInputOutput = { temporal_numeric_value: TemporalNumericValueOutput, id: string, publisher_merkle_root: string, value_compute_alg_hash: string, r: string, s: string, v: number };
export type U128Input = { upper: BigNumberish, lower: BigNumberish };
export type U128Output = { upper: BN, lower: BN };

const abi = {
  "programType": "contract",
  "specVersion": "1.1",
  "encodingVersion": "1",
  "concreteTypes": [
    {
      "type": "()",
      "concreteTypeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
    },
    {
      "type": "b256",
      "concreteTypeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
    },
    {
      "type": "bool",
      "concreteTypeId": "b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903"
    },
    {
      "type": "enum src5::State",
      "concreteTypeId": "287a382c1e0b1f11d12a422e77a248d27761327cd17515cc6e6369d528cf31ca",
      "metadataTypeId": 1
    },
    {
      "type": "enum std::identity::Identity",
      "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335",
      "metadataTypeId": 2
    },
    {
      "type": "enum stork_sway_sdk::errors::StorkError",
      "concreteTypeId": "475d2d1b9b9adb315310b755e85d29aa6af66cc924069dc12bf2fa5b03de5339",
      "metadataTypeId": 3
    },
    {
      "type": "enum stork_sway_sdk::events::StorkEvent",
      "concreteTypeId": "5a53bb2dd5fdf498df0233d9317f6c4235a9448fb63f5201eda779999df4ec0c",
      "metadataTypeId": 4
    },
    {
      "type": "str",
      "concreteTypeId": "8c25cb3686462e9a86d2883c5688a22fe738b0bbc85f458d2d2b5f3f667c6d5a"
    },
    {
      "type": "struct signed_int::i128::I128",
      "concreteTypeId": "ee4f613105299613c09709aa25fa5118e9a5afeef8e4f1c5871bd4f234631df1",
      "metadataTypeId": 7
    },
    {
      "type": "struct std::address::Address",
      "concreteTypeId": "f597b637c3b0f588fb8d7086c6f4735caa3122b85f0423b82e489f9bb58e2308",
      "metadataTypeId": 8
    },
    {
      "type": "struct std::string::String",
      "concreteTypeId": "9a7f1d3e963c10e0a4ea70a8e20a4813d1dc5682e28f74cb102ae50d32f7f98c",
      "metadataTypeId": 13
    },
    {
      "type": "struct std::vec::Vec<struct stork_sway_sdk::interface::TemporalNumericValueInput>",
      "concreteTypeId": "e67278f564f3da524afebc87950681dff66e11946370df7f4c68b5f01329590b",
      "metadataTypeId": 16,
      "typeArguments": [
        "672654baba0e998dd82f818c92c2b544c9275ee09007b0f65f59195a94a916d6"
      ]
    },
    {
      "type": "struct std::vm::evm::evm_address::EvmAddress",
      "concreteTypeId": "05a44d8c3e00faf7ed545823b7a2b32723545d8715d87a0ab3cf65904948e8d2",
      "metadataTypeId": 17
    },
    {
      "type": "struct stork_sway_sdk::interface::TemporalNumericValueInput",
      "concreteTypeId": "672654baba0e998dd82f818c92c2b544c9275ee09007b0f65f59195a94a916d6",
      "metadataTypeId": 18
    },
    {
      "type": "struct stork_sway_sdk::temporal_numeric_value::TemporalNumericValue",
      "concreteTypeId": "6972e006137b782c482ffc099e21cc55fce9151a2096dd6582df22c9dc81bd9c",
      "metadataTypeId": 19
    },
    {
      "type": "u64",
      "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
    },
    {
      "type": "u8",
      "concreteTypeId": "c89951a24c6ca28c13fd1cfdc646b2b656d69e61a92b91023be7eb58eb914b6b"
    }
  ],
  "metadataTypes": [
    {
      "type": "(_, _)",
      "metadataTypeId": 0,
      "components": [
        {
          "name": "__tuple_element",
          "typeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
        },
        {
          "name": "__tuple_element",
          "typeId": 19
        }
      ]
    },
    {
      "type": "enum src5::State",
      "metadataTypeId": 1,
      "components": [
        {
          "name": "Uninitialized",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "Initialized",
          "typeId": 2
        },
        {
          "name": "Revoked",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        }
      ]
    },
    {
      "type": "enum std::identity::Identity",
      "metadataTypeId": 2,
      "components": [
        {
          "name": "Address",
          "typeId": 8
        },
        {
          "name": "ContractId",
          "typeId": 12
        }
      ]
    },
    {
      "type": "enum stork_sway_sdk::errors::StorkError",
      "metadataTypeId": 3,
      "components": [
        {
          "name": "IncorrectFeeAsset",
          "typeId": 9,
          "errorMessage": "Incorrect fee asset."
        },
        {
          "name": "InsufficientFee",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0",
          "errorMessage": "Insufficient fee for updates."
        },
        {
          "name": "NoFreshUpdate",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
          "errorMessage": "No fresh update."
        },
        {
          "name": "FeedNotFound",
          "typeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b",
          "errorMessage": "Feed not found."
        },
        {
          "name": "InvalidSignature",
          "typeId": 18,
          "errorMessage": "Invalid signature."
        }
      ]
    },
    {
      "type": "enum stork_sway_sdk::events::StorkEvent",
      "metadataTypeId": 4,
      "components": [
        {
          "name": "ValueUpdate",
          "typeId": 0
        }
      ]
    },
    {
      "type": "generic T",
      "metadataTypeId": 5
    },
    {
      "type": "raw untyped ptr",
      "metadataTypeId": 6
    },
    {
      "type": "struct signed_int::i128::I128",
      "metadataTypeId": 7,
      "components": [
        {
          "name": "underlying",
          "typeId": 14
        }
      ]
    },
    {
      "type": "struct std::address::Address",
      "metadataTypeId": 8,
      "components": [
        {
          "name": "bits",
          "typeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
        }
      ]
    },
    {
      "type": "struct std::asset_id::AssetId",
      "metadataTypeId": 9,
      "components": [
        {
          "name": "bits",
          "typeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
        }
      ]
    },
    {
      "type": "struct std::bytes::Bytes",
      "metadataTypeId": 10,
      "components": [
        {
          "name": "buf",
          "typeId": 11
        },
        {
          "name": "len",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ]
    },
    {
      "type": "struct std::bytes::RawBytes",
      "metadataTypeId": 11,
      "components": [
        {
          "name": "ptr",
          "typeId": 6
        },
        {
          "name": "cap",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ]
    },
    {
      "type": "struct std::contract_id::ContractId",
      "metadataTypeId": 12,
      "components": [
        {
          "name": "bits",
          "typeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
        }
      ]
    },
    {
      "type": "struct std::string::String",
      "metadataTypeId": 13,
      "components": [
        {
          "name": "bytes",
          "typeId": 10
        }
      ]
    },
    {
      "type": "struct std::u128::U128",
      "metadataTypeId": 14,
      "components": [
        {
          "name": "upper",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "lower",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ]
    },
    {
      "type": "struct std::vec::RawVec",
      "metadataTypeId": 15,
      "components": [
        {
          "name": "ptr",
          "typeId": 6
        },
        {
          "name": "cap",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ],
      "typeParameters": [
        5
      ]
    },
    {
      "type": "struct std::vec::Vec",
      "metadataTypeId": 16,
      "components": [
        {
          "name": "buf",
          "typeId": 15,
          "typeArguments": [
            {
              "name": "",
              "typeId": 5
            }
          ]
        },
        {
          "name": "len",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ],
      "typeParameters": [
        5
      ]
    },
    {
      "type": "struct std::vm::evm::evm_address::EvmAddress",
      "metadataTypeId": 17,
      "components": [
        {
          "name": "bits",
          "typeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
        }
      ]
    },
    {
      "type": "struct stork_sway_sdk::interface::TemporalNumericValueInput",
      "metadataTypeId": 18,
      "components": [
        {
          "name": "temporal_numeric_value",
          "typeId": 19
        },
        {
          "name": "id",
          "typeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
        },
        {
          "name": "publisher_merkle_root",
          "typeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
        },
        {
          "name": "value_compute_alg_hash",
          "typeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
        },
        {
          "name": "r",
          "typeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
        },
        {
          "name": "s",
          "typeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
        },
        {
          "name": "v",
          "typeId": "c89951a24c6ca28c13fd1cfdc646b2b656d69e61a92b91023be7eb58eb914b6b"
        }
      ]
    },
    {
      "type": "struct stork_sway_sdk::temporal_numeric_value::TemporalNumericValue",
      "metadataTypeId": 19,
      "components": [
        {
          "name": "timestamp_ns",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "quantized_value",
          "typeId": 7
        }
      ]
    }
  ],
  "functions": [
    {
      "name": "accept_ownership",
      "inputs": [],
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "name": "get_temporal_numeric_value_unchecked_v1",
      "inputs": [
        {
          "name": "id",
          "concreteTypeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
        }
      ],
      "output": "6972e006137b782c482ffc099e21cc55fce9151a2096dd6582df22c9dc81bd9c",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "name": "get_update_fee_v1",
      "inputs": [
        {
          "name": "update_data",
          "concreteTypeId": "e67278f564f3da524afebc87950681dff66e11946370df7f4c68b5f01329590b"
        }
      ],
      "output": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "name": "initialize",
      "inputs": [
        {
          "name": "initial_owner",
          "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335"
        },
        {
          "name": "stork_public_key",
          "concreteTypeId": "05a44d8c3e00faf7ed545823b7a2b32723545d8715d87a0ab3cf65904948e8d2"
        },
        {
          "name": "single_update_fee_in_wei",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ],
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "name": "propose_owner",
      "inputs": [
        {
          "name": "new_owner",
          "concreteTypeId": "f597b637c3b0f588fb8d7086c6f4735caa3122b85f0423b82e489f9bb58e2308"
        }
      ],
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "name": "single_update_fee_in_wei",
      "inputs": [],
      "output": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "name": "stork_public_key",
      "inputs": [],
      "output": "05a44d8c3e00faf7ed545823b7a2b32723545d8715d87a0ab3cf65904948e8d2",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "name": "update_single_update_fee_in_wei",
      "inputs": [
        {
          "name": "single_update_fee_in_wei",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ],
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "name": "update_stork_public_key",
      "inputs": [
        {
          "name": "stork_public_key",
          "concreteTypeId": "05a44d8c3e00faf7ed545823b7a2b32723545d8715d87a0ab3cf65904948e8d2"
        }
      ],
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "name": "update_temporal_numeric_values_v1",
      "inputs": [
        {
          "name": "update_data",
          "concreteTypeId": "e67278f564f3da524afebc87950681dff66e11946370df7f4c68b5f01329590b"
        }
      ],
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        },
        {
          "name": "payable",
          "arguments": []
        }
      ]
    },
    {
      "name": "verify_stork_signature_v1",
      "inputs": [
        {
          "name": "stork_pubkey",
          "concreteTypeId": "05a44d8c3e00faf7ed545823b7a2b32723545d8715d87a0ab3cf65904948e8d2"
        },
        {
          "name": "id",
          "concreteTypeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
        },
        {
          "name": "recv_time",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "quantized_value",
          "concreteTypeId": "ee4f613105299613c09709aa25fa5118e9a5afeef8e4f1c5871bd4f234631df1"
        },
        {
          "name": "publisher_merkle_root",
          "concreteTypeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
        },
        {
          "name": "value_compute_alg_hash",
          "concreteTypeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
        },
        {
          "name": "r",
          "concreteTypeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
        },
        {
          "name": "s",
          "concreteTypeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
        },
        {
          "name": "v",
          "concreteTypeId": "c89951a24c6ca28c13fd1cfdc646b2b656d69e61a92b91023be7eb58eb914b6b"
        }
      ],
      "output": "b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903",
      "attributes": null
    },
    {
      "name": "version",
      "inputs": [],
      "output": "9a7f1d3e963c10e0a4ea70a8e20a4813d1dc5682e28f74cb102ae50d32f7f98c",
      "attributes": null
    },
    {
      "name": "owner",
      "inputs": [],
      "output": "287a382c1e0b1f11d12a422e77a248d27761327cd17515cc6e6369d528cf31ca",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    }
  ],
  "loggedTypes": [
    {
      "logId": "10098701174489624218",
      "concreteTypeId": "8c25cb3686462e9a86d2883c5688a22fe738b0bbc85f458d2d2b5f3f667c6d5a"
    },
    {
      "logId": "5142315946124958513",
      "concreteTypeId": "475d2d1b9b9adb315310b755e85d29aa6af66cc924069dc12bf2fa5b03de5339"
    },
    {
      "logId": "6508751692018611352",
      "concreteTypeId": "5a53bb2dd5fdf498df0233d9317f6c4235a9448fb63f5201eda779999df4ec0c"
    }
  ],
  "messagesTypes": [],
  "configurables": [],
  "errorCodes": {
    "18446744069414584320": {
      "pos": {
        "pkg": "stork",
        "file": "src/main.sw",
        "line": 238,
        "column": 17
      },
      "logId": "5142315946124958513",
      "msg": null
    },
    "18446744069414584321": {
      "pos": {
        "pkg": "stork",
        "file": "src/main.sw",
        "line": 206,
        "column": 17
      },
      "logId": "5142315946124958513",
      "msg": null
    },
    "18446744069414584322": {
      "pos": {
        "pkg": "stork",
        "file": "src/main.sw",
        "line": 216,
        "column": 13
      },
      "logId": "5142315946124958513",
      "msg": null
    },
    "18446744069414584323": {
      "pos": {
        "pkg": "stork",
        "file": "src/main.sw",
        "line": 221,
        "column": 13
      },
      "logId": "5142315946124958513",
      "msg": null
    },
    "18446744069414584324": {
      "pos": {
        "pkg": "stork",
        "file": "src/main.sw",
        "line": 224,
        "column": 13
      },
      "logId": "5142315946124958513",
      "msg": null
    }
  }
};

const storageSlots: StorageSlot[] = [
  {
    "key": "35d42e7adaec4a2aab6602c621de51a73acbc66353c5512061b356f80aa9b8d9",
    "value": "0000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "key": "35d42e7adaec4a2aab6602c621de51a73acbc66353c5512061b356f80aa9b8da",
    "value": "0000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "key": "6189f6fb2b7278c2a5f1b1ebfc35d4838d6c414acd1f700a7cf63bfc75e71a2b",
    "value": "0000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "key": "6189f6fb2b7278c2a5f1b1ebfc35d4838d6c414acd1f700a7cf63bfc75e71a2c",
    "value": "0000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "key": "cc810296276c1a8f95a9839c890da0814ec4cd69701f777654be6d879ad0e372",
    "value": "0000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "key": "f565ddf302f385048492da91a5ab6b089740abdfd5915ce000d038ad2b0b926e",
    "value": "0000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "key": "f565ddf302f385048492da91a5ab6b089740abdfd5915ce000d038ad2b0b926f",
    "value": "0000000000000000000000000000000000000000000000000000000000000000"
  },
  {
    "key": "fb81ee288c2f1b5e5ca789e7660af75cf181385e66e41017f0abb13b5ff1660d",
    "value": "0000000000000000000000000000000000000000000000000000000000000000"
  }
];

export class StorkInterface extends Interface {
  constructor() {
    super(abi);
  }

  declare functions: {
    accept_ownership: FunctionFragment;
    get_temporal_numeric_value_unchecked_v1: FunctionFragment;
    get_update_fee_v1: FunctionFragment;
    initialize: FunctionFragment;
    propose_owner: FunctionFragment;
    single_update_fee_in_wei: FunctionFragment;
    stork_public_key: FunctionFragment;
    update_single_update_fee_in_wei: FunctionFragment;
    update_stork_public_key: FunctionFragment;
    update_temporal_numeric_values_v1: FunctionFragment;
    verify_stork_signature_v1: FunctionFragment;
    version: FunctionFragment;
    owner: FunctionFragment;
  };
}

export class Stork extends __Contract {
  static readonly abi = abi;
  static readonly storageSlots = storageSlots;

  declare interface: StorkInterface;
  declare functions: {
    accept_ownership: InvokeFunction<[], void>;
    get_temporal_numeric_value_unchecked_v1: InvokeFunction<[id: string], TemporalNumericValueOutput>;
    get_update_fee_v1: InvokeFunction<[update_data: Vec<TemporalNumericValueInputInput>], BN>;
    initialize: InvokeFunction<[initial_owner: IdentityInput, stork_public_key: EvmAddress, single_update_fee_in_wei: BigNumberish], void>;
    propose_owner: InvokeFunction<[new_owner: AddressInput], void>;
    single_update_fee_in_wei: InvokeFunction<[], BN>;
    stork_public_key: InvokeFunction<[], EvmAddress>;
    update_single_update_fee_in_wei: InvokeFunction<[single_update_fee_in_wei: BigNumberish], void>;
    update_stork_public_key: InvokeFunction<[stork_public_key: EvmAddress], void>;
    update_temporal_numeric_values_v1: InvokeFunction<[update_data: Vec<TemporalNumericValueInputInput>], void>;
    verify_stork_signature_v1: InvokeFunction<[stork_pubkey: EvmAddress, id: string, recv_time: BigNumberish, quantized_value: I128Input, publisher_merkle_root: string, value_compute_alg_hash: string, r: string, s: string, v: BigNumberish], boolean>;
    version: InvokeFunction<[], StdString>;
    owner: InvokeFunction<[], StateOutput>;
  };

  constructor(
    id: string | Address,
    accountOrProvider: Account | Provider,
  ) {
    super(id, abi, accountOrProvider);
  }
}
